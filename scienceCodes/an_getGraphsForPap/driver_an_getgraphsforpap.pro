;+
;v0.11
;2018.08.01
;2018.07.31
;Routine to generate pulse profiles suitable for publication
;for paper on shock widhts
;Uses output of driver_getpulseprofiles.pro as inputs
; :Description:
;    Describe the procedure.
;
;
;
;
;
; :Author: Anton Kananovich
;-
PRO driver_an_getGraphsForPap
curdate = '20180904'
myframe = 1147
sgLeft  = 14
sgRight = 14
sgOrder = 4

CD, 'F:\kananovich\OneDrive - University of Iowa\bDocs\expAnalysisBackup\c_14226_457\analysis\20180904profilesFPsavgol\04_an_getGraphsForPap\inputs'

filepath = DIALOG_PICKFILE(/READ, filter='*.sav')
RESTORE, filepath ; restore the structure sdataFile (generated by the
;code driver_getPulseProfiles, v.0.21
CD, '..\outputs'

iwant = where(sdatafile.time eq myframe)
x = sdatafile.coord[iwant]
y = sdatafile.den[iwant]

dt = x[1]-x[0]
savgolFilter = SAVGOL(sgLeft, sgRight, 0, sgOrder, /DOUBLE)
savgolSecondFilter = SAVGOL(sgLeft, sgRight, 2, sgOrder, /DOUBLE)*(FACTORIAL(2)/ (dt^2))
savgolFirstFilter = SAVGOL(sgLeft, sgRight, 1, sgOrder, /DOUBLE)*(FACTORIAL(1)/ (dt^2))
Yfiltered = CONVOL(Y, savgolFilter, /EDGE_TRUNCATE);

;find the maximum of the density distribution:
maxRough = max(Yfiltered,indmax)
xwheremaxRough = x[indmax]
xx = x[indmax-5:indmax+5]
yy = Yfiltered[indmax-5:indmax+5]
ss={x:dblarr(11),y:dblarr(11)}
ss.x=xx
ss.y=yy
res = findmaxppolyfit(ss,4)




;second derivative by Savgol:
savgolSndDeriv = CONVOL(Y, savgolSecondFilter, /EDGE_TRUNCATE);
savgolFirstDeriv = CONVOL(Y, savgolFirstFilter, /EDGE_TRUNCATE);
;second derivative by the finite differences:
sndDeriv = DERIV(x,DERIV(x,Yfiltered))

forwardRange = WHERE(x GT xwheremaxrough AND x LT  (xwheremaxrough + 8.0d*2.0d*5.0d))

fRangeSize = N_ELEMENTS(forwardRange)
sSecondDeriv={x:dblarr(fRangeSize),y:dblarr(fRangeSize)}
sSecondDeriv.x=X[forwardRange]
sSecondDeriv.y=savgolSndDeriv[forwardRange]


resSecondDeriv =  findmaxppolyfit(sSecondDeriv,4)
p = plot(x,y,linestyle='',symbol='o')
p = plot(x,yfiltered,color = 'blue',/overplot)
p = plot([res.x],[res.y],symbol='+',color='red', /overplot)
p = plot([resSecondDeriv.x],[resSecondDeriv.y],symbol='+',color='blue', /overplot)

;stop
p2 = plot(x,sndDeriv, linestyle='',symbol='o')
p2 = plot(x,savgolSndDeriv, color='blue', /overplot)
;p2 = plot(x,savgolSndDeriv, color='blue')
;p2 = plot(x,savgolSndDeriv, linestyle='', symbol='o', /overplot)

p3 = plot(x,savgolFirstDeriv, color='red')

;Comparison with the ideal profile
resol = 0.25d
xideal = DINDGEN(Floor(10000.0d/resol))*resol/100d - 50.00d
yideal = -TANH(2.0d*xideal/6.0d)
p4 = Plot(xideal, yideal)
dtideal = xideal[1] - xideal[0]
savgolFirstFilterIdeal = SAVGOL(sgLeft, sgRight, 1, sgOrder, /DOUBLE)*(FACTORIAL(1)/ (dtideal^2))
firstDerivIdeal = CONVOL(yideal, savgolFirstFilterIdeal, /EDGE_TRUNCATE)
p5 = Plot(xideal, firstDerivIdeal,color='red')

soutput = {x:DBLARR(N_ELEMENTS(x)),y:DBLARR(N_ELEMENTS(y)),ysavgol:DBLARR(N_ELEMENTS(Yfiltered)),ysnd:DBLARR(N_ELEMENTS(sndDeriv)),ySavgolsnd:DBLARR(N_ELEMENTS(sndDeriv)),ySavgolFirst:savgolFirstDeriv}
soutput.x = x
soutput.y = y
soutput.ysavgol = Yfiltered
soutput.ysnd = sndDeriv
soutput.ySavgolsnd = savgolSndDeriv

sparam = {frame:0d,b:0d,framestep:sdataFile.framestep,sgLeft:0d,sgRight:0d,sgOrder:0d,maxCoord:res.X,maxy:res.Y,frontCoord:resSecondDeriv.X,maxy2:resSecondDeriv.Y,width:(resSecondDeriv.X-res.X)}
sparam.frame = myframe
sparam.b = sdataFile.b
sparam.sgLeft = sgLeft
sparam.sgRight = sgRight
sparam.sgOrder = sgOrder


seconds = STRING(SYSTIME(/seconds),FORMAT='(I18)')
fnam = STRCOMPRESS(curdate +'_ff' + STRING(myframe)+'_b' + STRING(sdataFile.b,format='(D4.2)') + '_faveraging' + STRING(sdataFile.framestep,format='(D4.1)') + '_allgraphs' + '_' + seconds + '.csv',/REMOVE_ALL)
fnamParam = STRCOMPRESS(curdate +'_ff' + STRING(myframe)+'_b' + STRING(sdataFile.b,format='(D4.2)') + '_faveraging' + STRING(sdataFile.framestep,format='(D4.1)') + '_param' + '_' + seconds + '.csv',/REMOVE_ALL)

WRITE_CSV, fnam, soutput
WRITE_CSV, fnamParam, sparam   
 
stop
p4.close
p3.close
p2.close
p.close
p5.close
END